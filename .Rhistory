setwd("~/Documentos/Repositories/SPLC-ExtensionST/graphs_datasets")
variety=rep(LETTERS[1:7], each=40)
treatment=rep(c("high","low"),each=20)
note=seq(1:280)+sample(1:150, 280, replace=T)
data_bp=data.frame(variety, treatment ,  note)
boxplot_erp_data <- read_csv("ERP todo boxplot .csv")
ggplot(boxplot_erp_data, aes(x=algorithm, y=value, fill=metric)) + geom_boxplot()+ scale_y_continuous(trans = 'log2')
ggplot(boxplot_erp_data, aes(fill=algorithm, y=value, x=algorithm)) +
geom_bar(position="dodge", stat="identity") + scale_y_continuous(trans = 'log2') + facet_wrap(~metric)
library(tidyverse)
library(fmsb)
spider_dat <- read_csv("sipder_notepad.csv")
sapply(spider_dat, class)
data <- spider_dat[,2:6]
rownames(data) <- c("ERP", "Smart Farm", "Computer Configuration")
data <- rbind(rep(1605,5) , rep(0,5) , data)
colors_border=c( rgb(0,0.6,0.5,0.9), rgb(0.95,0.90,0.25,0.9) , rgb(1,0,0,0.9) )
colors_in=c( rgb(0,0.6,0.5,0.4), rgb(0.95,0.90,0.25,0.4) , rgb(1,0,0,0.4) )
radarchart(data,pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
vlcex=0.8 )
legend(x=1.2, y=1, legend = c("ERP", "Smart Farm", "Computer Configuration"), bty = "n", pch=20 ,
col=colors_in , text.col = "black", cex=0.9, pt.cex=3)
#Para los boxplot
variety=rep(LETTERS[1:7], each=40)
treatment=rep(c("high","low"),each=20)
note=seq(1:280)+sample(1:150, 280, replace=T)
data_bp=data.frame(variety, treatment ,  note)
boxplot_erp_data <- read_csv("ERP todo boxplot .csv")
ggplot(boxplot_erp_data, aes(x=algorithm, y=value, fill=metric)) + geom_boxplot()+ scale_y_continuous(trans = 'log2')
spider_dat <- read_csv("sipder_notepad.csv")
sapply(spider_dat, class)
data <- spider_dat[,2:6]
rownames(data) <- c("ERP", "Smart Farm", "Computer Configuration")
data <- rbind(rep(1605,5) , rep(0,5) , data)
colors_border=c( rgb(0,0.6,0.5,0.9), rgb(0.95,0.90,0.25,0.9) , rgb(1,0,0,0.9) )
colors_in=c( rgb(0,0.6,0.5,0.4), rgb(0.95,0.90,0.25,0.4) , rgb(1,0,0,0.4) )
radarchart(data,pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
vlcex=0.8 )
legend(x=1.2, y=1, legend = c("ERP", "Smart Farm", "Computer Configuration"), bty = "n", pch=20 ,
col=colors_in , text.col = "black", cex=0.9, pt.cex=3)
install.packages("ggplot2")
library(ggplot2)
spider_dat <- read_csv("sipder_notepad.csv")
sapply(spider_dat, class)
data <- spider_dat[,2:6]
rownames(data) <- c("ERP", "Smart Farm", "Computer Configuration")
data <- rbind(rep(1605,5) , rep(0,5) , data)
colors_border=c( rgb(0,0.6,0.5,0.9), rgb(0.95,0.90,0.25,0.9) , rgb(1,0,0,0.9) )
colors_in=c( rgb(0,0.6,0.5,0.4), rgb(0.95,0.90,0.25,0.4) , rgb(1,0,0,0.4) )
radarchart(data,pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
vlcex=0.8 )
legend(x=1.2, y=1, legend = c("ERP", "Smart Farm", "Computer Configuration"), bty = "n", pch=20 ,
col=colors_in , text.col = "black", cex=0.9, pt.cex=3)
library(tidyverse)
library(fmsb)
library(fmsb)
spider_dat <- read_csv("sipder_notepad.csv")
sapply(spider_dat, class)
data <- spider_dat[,2:6]
rownames(data) <- c("ERP", "Smart Farm", "Computer Configuration")
data <- rbind(rep(1605,5) , rep(0,5) , data)
colors_border=c( rgb(0,0.6,0.5,0.9), rgb(0.95,0.90,0.25,0.9) , rgb(1,0,0,0.9) )
colors_in=c( rgb(0,0.6,0.5,0.4), rgb(0.95,0.90,0.25,0.4) , rgb(1,0,0,0.4) )
radarchart(data,pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
vlcex=0.8 )
legend(x=1.2, y=1, legend = c("ERP", "Smart Farm", "Computer Configuration"), bty = "n", pch=20 ,
col=colors_in , text.col = "black", cex=0.9, pt.cex=3)
View(data)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(fmsb)
library(ggplot2)
spider_dat <- read_csv("sipder_notepad.csv")
sapply(spider_dat, class)
data <- spider_dat[,2:6]
rownames(data) <- c("ERP", "Smart Farm", "Computer Configuration")
data <- rbind(rep(1605,5) , rep(0,5) , data)
colors_border=c( rgb(0,0.6,0.5,0.9), rgb(0.95,0.90,0.25,0.9) , rgb(1,0,0,0.9) )
colors_in=c( rgb(0,0.6,0.5,0.4), rgb(0.95,0.90,0.25,0.4) , rgb(1,0,0,0.4) )
radarchart(data,pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
vlcex=0.8 )
legend(x=1.2, y=1, legend = c("ERP", "Smart Farm", "Computer Configuration"), bty = "n", pch=20 ,
col=colors_in , text.col = "black", cex=0.9, pt.cex=3)
variety=rep(LETTERS[1:7], each=40)
treatment=rep(c("high","low"),each=20)
note=seq(1:280)+sample(1:150, 280, replace=T)
data_bp=data.frame(variety, treatment ,  note)
boxplot_erp_data <- read_csv("ERP todo boxplot .csv")
ggplot(boxplot_erp_data, aes(x=algorithm, y=value, fill=metric)) + geom_boxplot()+ scale_y_continuous(trans = 'log2')
spider_dat <- read_csv("sipder_notepad.csv")
sapply(spider_dat, class)
data <- spider_dat[,2:6]
rownames(data) <- c("ERP", "Smart Farm", "Computer Configuration")
data <- rbind(rep(1605,5) , rep(0,5) , data)
colors_border=c( rgb(0,0.6,0.5,0.9), rgb(0.95,0.90,0.25,0.9) , rgb(1,0,0,0.9) )
colors_in=c( rgb(0,0.6,0.5,0.4), rgb(0.95,0.90,0.25,0.4) , rgb(1,0,0,0.4) )
radarchart(data,pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
vlcex=0.8 )
legend(x=1.2, y=1, legend = c("ERP", "Smart Farm", "Computer Configuration"), bty = "n", pch=20 ,
col=colors_in , text.col = "black", cex=0.9, pt.cex=3)
#Para los boxplot
variety=rep(LETTERS[1:7], each=40)
treatment=rep(c("high","low"),each=20)
note=seq(1:280)+sample(1:150, 280, replace=T)
data_bp=data.frame(variety, treatment ,  note)
boxplot_erp_data <- read_csv("ERP todo boxplot .csv")
ggplot(boxplot_erp_data, aes(x=algorithm, y=value, fill=metric)) + geom_boxplot()+ scale_y_continuous(trans = 'log2')
View(boxplot_erp_data)
boxplot_erp_data <- read_csv("ERP todo boxplot .csv")
ggplot(boxplot_erp_data, aes(x=Algorithm, y=value, fill=metric)) + geom_boxplot()+ scale_y_continuous(trans = 'log2')
View(boxplot_erp_data)
erp_density=boxplot_erp_data[ which(boxplot_erp_data$metric=='Density') ]
wilcox.test(value ~ Algorithm, data = erp_density, exact = FALSE)
erp_density=boxplot_erp_data[ which(boxplot_erp_data$metric=='Density') ]
erp_density=boxplot_erp_data[ which(boxplot_erp_data$metric=='Density',) ]
erp_density=boxplot_erp_data[ which(metric=='Density',) ]
erp_density=boxplot_erp_data[ which(metric=='Density',) ]
erp_density=boxplot_erp_data[ which(boxplot_erp_data$metric=='Density',) ]
erp_density=boxplot_erp_data[ which(boxplot_erp_data$metric=='Density',) ]
subset(erp_density, metric == 'Density')
subset(boxplot_erp_data, metric == 'Density')
wilcox.test(value ~ Algorithm, data = subset(boxplot_erp_data, metric == 'Density'), exact = FALSE)
erp_density=subset(boxplot_erp_data, metric == 'Density')
View(erp_density)
friedman.test(value, Algorithm, metric
)
friedman.test(value~ Algorithm | metric,data = boxplot_erp_data )
all_data <- read_csv("all.csv")
friedman.test(value~ Algorithm | metric,data = all_data )
View(all_data)
friedman.test(value~ Algorithm , data = all_data )
friedman.test(value~ Algorithm , data = all_data )
friedman.test(value~ Algorithm | metric, data = all_data )
all_data <- read_csv("all.csv")
friedman.test(value~ Algorithm | metric, data = all_data )
density_data =subset(all_data, metric == 'Density')
View(density_data)
friedman.test(value~ Algorithm, data = density_data )
all_data <- read_csv("all.csv")
density_data =subset(all_data, metric == 'Density')
friedman.test(value~ Algorithm, data = density_data )
friedman.test(value ~ Algorithm, data = density_data )
friedman.test(value ~ Algorithm|Enrtopy, data = density_data )
friedman.test(value ~ Algorithm|Entrpy, data = density_data )
friedman.test(value ~ Algorithm|Entropy, data = density_data )
all_data <- read_csv("all.csv")
all_data$Algorithm<-factor(all_data$Algorithm)
all_data$metric<-factor(all_data$metric)
all_data$Entropy<-factor(all_data$Entropy)
density_data =subset(all_data, metric == 'Density')
friedman.test(value ~ Algorithm|Entropy, data = density_data )
friedman.test(value ~ Algorithm, data = density_data )
table(all_data$metric, all_data$Algorithm)
friedman.test(value ~ Algorithm, data = density_data )
friedman.test(density_data$value, density_data$Algorithm )
friedman.test(density_data$value, density_data$Algorithm,density_data$metric )
all_data <- read_csv("all.csv")
View(all_data)
all_data$Algorithm<-factor(all_data$Algorithm)
all_data$metric<-factor(all_data$metric)
all_data$Entropy<-factor(all_data$Entropy)
all_data$experiment<-factor(all_data$experiment)
all_data$ID <- seq.int(nrow(all_data))
density_data =subset(all_data, metric == 'Density')
friedman.test(density_data$value, density_data$Algorithm,density_data$ID)
table(density_data$Algorithm,density_data$value)
friedman.test(value ~ Algorithm|ID, density_data)
table(density_data$ID,density_data$Algorithm)
density_data =subset(all_data, metric == 'Density' && experiment == 'dell')
density_data
density_data =subset(all_data, metric == 'Density' && experiment == 'dell')
View(density_data)
density_data =subset(all_data, metric == 'Density' & experiment == 'dell')
table(density_data$ID,density_data$Algorithm)
density_data =subset(all_data, metric == 'Density' & experiment == 'erp')
table(density_data$ID,density_data$Algorithm)
aggregate(x=density_data,by=Algorithm,FUN=median)
aggregate(x=density_data,by=list(density_data$Algorithm, density_data$Entropy),FUN=median)
aggregate(x=density_data$value,by=list(density_data$Algorithm, density_data$Entropy),FUN=median)
View(density_data)
aggregate(x=all_data$value,by=list(all_data$Algorithm, all$Entropy,all$experiment),FUN=median)
View(all_data)
aggregate(x=all_data$value,by=list(all_data$Algorithm, all_data$Entropy,all$experiment),FUN=median)
aggregate(x=all_data$value,by=list(all_data$Algorithm, all_data$Entropy,all_data$experiment),FUN=median)
all_data <- read_csv("all.csv")
all_data$Algorithm<-factor(all_data$Algorithm)
all_data$metric<-factor(all_data$metric)
all_data$Entropy<-factor(all_data$Entropy)
all_data$experiment<-factor(all_data$experiment)
all_data$ID <- seq.int(nrow(all_data))
density_data =subset(all_data, metric == 'Density' & experiment == 'erp')
table(density_data$ID,density_data$Algorithm)
aggregate(x=density_data$value,by=list(density_data$Algorithm, density_data$Entropy),FUN=median)
aggregate(x=all_data$value,by=list(all_data$Algorithm, all_data$Entropy,all_data$experiment),FUN=median)
friedman.test(value ~ Algorithm|ID, density_data)
